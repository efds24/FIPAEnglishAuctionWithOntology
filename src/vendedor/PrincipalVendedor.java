package vendedor;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.rmi.RemoteException;
import javax.swing.table.DefaultTableModel;

public class PrincipalVendedor extends javax.swing.JFrame {

    private static PrincipalVendedor instance;
    private AgenteVendedor agente;

    public static PrincipalVendedor getInstance(AgenteVendedor agente) {
        if (instance == null) {
            instance = new PrincipalVendedor(agente);
        }
        return instance;
    }

    private PrincipalVendedor(AgenteVendedor agente) {
        initComponents();
        setTitle(agente.getAID().getLocalName());
        this.agente = agente;
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                agente.doDelete();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nombreLibro = new javax.swing.JTextField();
        addLibroBoton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaLibros = new javax.swing.JTable();
        iniciarBoton = new javax.swing.JButton();
        precioLibro = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        incrementoText = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        subastasTabla = new javax.swing.JScrollPane();
        tablaSubastasActivas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaSubastasFinalizadas = new javax.swing.JTable();

        jLabel1.setText("Precio inicial ");

        nombreLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreLibroActionPerformed(evt);
            }
        });

        addLibroBoton.setText("AÃ±adir libro");
        addLibroBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLibroBotonActionPerformed(evt);
            }
        });

        tablaLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre"
            }
        ));
        jScrollPane1.setViewportView(tablaLibros);

        iniciarBoton.setText("Iniciar subasta");
        iniciarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarBotonActionPerformed(evt);
            }
        });

        jLabel2.setText("Incremento entre pujas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(addLibroBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(precioLibro)
                    .addComponent(incrementoText)
                    .addComponent(iniciarBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addLibroBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)
                        .addComponent(precioLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(incrementoText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(iniciarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Libros", jPanel1);

        tablaSubastasActivas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subasta", "Precio actual", "Comprador actual", "Incremento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        subastasTabla.setViewportView(tablaSubastasActivas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(subastasTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(subastasTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Subastas activas", jPanel2);

        tablaSubastasFinalizadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Libro", "Precio de venta", "Comprador"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaSubastasFinalizadas);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Subastas finalizadas", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addLibroBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLibroBotonActionPerformed
        if (!(nombreLibro.getText().isEmpty())) {
            addFilaTablaLibros(nombreLibro.getText());
            nombreLibro.setText("");
        }
    }//GEN-LAST:event_addLibroBotonActionPerformed

    private void nombreLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreLibroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreLibroActionPerformed

    private void iniciarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarBotonActionPerformed
        DefaultTableModel tm = (DefaultTableModel) tablaLibros.getModel();
        int fila = tablaLibros.getSelectedRow();
        String precioInicial = precioLibro.getText();
        String incremento = incrementoText.getText();
        if (fila != -1 && !precioInicial.isEmpty() && !incremento.isEmpty()) {
            String libro = String.valueOf(tm.getValueAt(fila, 0));

            DefaultTableModel modeloSubastasActivas = (DefaultTableModel) tablaSubastasActivas.getModel();
            boolean encontrado = false;
            for (int i = 0; i < modeloSubastasActivas.getRowCount(); i++) {
                if (modeloSubastasActivas.getValueAt(i, 0).equals((Object) libro)) {
                    encontrado = true;
                    break;
                }
            }

            if (encontrado) {
                java.awt.EventQueue.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        javax.swing.JOptionPane.showMessageDialog(null, "Ya hay una subasta activa de este libro, espere a que termine e intentelo de nuevo", agente.getLocalName(), javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                });
            } else {//AÃ±adimos el libro a la tabla de subastas activas
                addFilaTablaSubastasActivas(libro, precioInicial, "", incremento);

                //Avisamos a los compradores de que se ha iniciado una subasta
                agente.iniciarSubasta(libro, Double.parseDouble(precioInicial), Double.parseDouble(incremento));

                //Informamos de que todo a salido correctamente            
                java.awt.EventQueue.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        javax.swing.JOptionPane.showMessageDialog(null, "Subasta de " + libro + "\nPrecio inicial: " + precioInicial + "\nIncremento: " + incremento, "Subasta iniciada", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    }
                });
            }

            precioLibro.setText("");
            incrementoText.setText("");

        } else {
            java.awt.EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    javax.swing.JOptionPane.showMessageDialog(null, "Error inesperado en el inicio de la subasta. Por favor, compruebe que ha introducido los datos correctamente e intentelo de nuevo.", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            });
        }
    }//GEN-LAST:event_iniciarBotonActionPerformed

    public void addFilaTablaLibros(String nombreLibro) {
        Object[] fila = new Object[1];

        fila[0] = (Object) nombreLibro;

        DefaultTableModel modelo = (DefaultTableModel) tablaLibros.getModel();
        modelo.addRow(fila);

        tablaLibros.setModel(modelo);
    }

    public void addFilaTablaSubastasActivas(String nombreLibro, String precio, String comprador, String incremento) {
        Object[] fila = new Object[4];

        fila[0] = (Object) nombreLibro;
        fila[1] = (Object) precio;
        fila[2] = (Object) comprador;
        fila[3] = (Object) incremento;

        DefaultTableModel modelo = (DefaultTableModel) tablaSubastasActivas.getModel();
        modelo.addRow(fila);

        tablaSubastasActivas.setModel(modelo);
    }

    public void rmFilaTablaSubastasActivas(String libro) {
        DefaultTableModel tm = (DefaultTableModel) tablaSubastasActivas.getModel();
        int row = -1;
        for (int i = 0; i < tm.getRowCount(); i++) {
            if (tm.getValueAt(i, 0).equals((Object) libro)) {
                row = i;
                break;
            }
        }
        tm.removeRow(row);
        tablaSubastasActivas.setModel(tm);
    }

    public void addFilaTablaSubastasFinalizadas(String nombreLibro, String precio, String comprador) {
        Object[] fila = new Object[3];

        fila[0] = (Object) nombreLibro;
        fila[1] = (Object) precio;
        fila[2] = (Object) comprador;

        DefaultTableModel modelo = (DefaultTableModel) tablaSubastasFinalizadas.getModel();
        modelo.addRow(fila);

        tablaSubastasFinalizadas.setModel(modelo);
    }

    public void modificarTablaSubastasActivas(String libro, String comprador, String precio) {
        DefaultTableModel modelo = (DefaultTableModel) tablaSubastasActivas.getModel();
        int row = -1;
        for (int i = 0; i < modelo.getRowCount(); i++) {
            if (modelo.getValueAt(i, 0).equals((Object) libro)) {
                row = i;
                break;
            }
        }
        modelo.setValueAt(precio, row, 1);
        modelo.setValueAt(comprador, row, 2);
        tablaSubastasActivas.setModel(modelo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addLibroBoton;
    private javax.swing.JTextField incrementoText;
    private javax.swing.JButton iniciarBoton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nombreLibro;
    private javax.swing.JTextField precioLibro;
    private javax.swing.JScrollPane subastasTabla;
    private javax.swing.JTable tablaLibros;
    private javax.swing.JTable tablaSubastasActivas;
    private javax.swing.JTable tablaSubastasFinalizadas;
    // End of variables declaration//GEN-END:variables

}
